#!/usr/bin/env python3
# This file is placed in the Public Domain.


"daemon"


import os
import sys
import termios
import time


from objx import Default


from objr.client  import Client, cmnd, init, parse, scan
from objr.handler import Event
from objr.log     import debug, enable
from objr.run     import broker
from objr.thread  import errors, setout


from objd import modules


Cfg             = Default()
Cfg.dis         = ""
Cfg.mod         = "cmd,err,mod,thr,irc,rss"
Cfg.opts        = ""
Cfg.name        = __file__.rsplit(os.sep, maxsplit=1)[-1]
Cfg.version     = "13"
Cfg.wdr         = os.path.expanduser(f"~/.{Cfg.name}")
Cfg.mdir        = os.path.join(Cfg.wdr, "mods")
Cfg.pidfile     = os.path.join(Cfg.wdr, f"{Cfg.name}.pid")


def daemon(verbose=False):
    "switch to background."
    # pylint: disable=W0212
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    pid2 = os.fork()
    if pid2 != 0:
        os._exit(0)
    if not verbose:
        with open('/dev/null', 'r', encoding="utf-8") as sis:
            os.dup2(sis.fileno(), sys.stdin.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as sos:
            os.dup2(sos.fileno(), sys.stdout.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as ses:
            os.dup2(ses.fileno(), sys.stderr.fileno())
    os.umask(0)
    os.chdir("/")


def forever():
    while True:
        time.sleep(1.0)


def pidfile(path):
    "create pidfile"
    if os.path.exists(path):
        os.unlink(path)
    cdir(path)
    with open(path, "w", encoding="utf-8") as fds:
        fds.write(str(os.getpid()))


def privileges(username):
    "drop privileges."
    pwnam = pwd.getpwnam(username)
    os.setgid(pwnam.pw_gid)
    os.setuid(pwnam.pw_uid)


def main():
    "main"
    parse(Cfg, " ".join(sys.argv[1:]))
    Cfg.mod = ",".join(dir(modules))
    daemon("v" in Cfg.opts)
    scan(modules, Cfg.mod, Cfg.sets.dis)
    init(modules, Cfg.mod, Cfg.sets.dis)
    pidfile(Cfg.pidfile)
    forever()


if __name__ == "__main__":
    main()
