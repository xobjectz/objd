#!/usr/bin/env python3
# This file is placed in the Public Domain.


"daemon"


import os
import pwd
import sys


from objx import Default, cdir


from objr.client  import cmnd, init, scan
from objr.log     import enable
from objr.parse   import parse
from objr.thread  import setout
from objr.utils   import forever


from objd import modules


Cfg             = Default()
Cfg.dis         = ""
Cfg.opts        = ""
Cfg.mod         = "cmd,err,irc,opm,rss,thr"
Cfg.name        = __file__.rsplit(os.sep, maxsplit=1)[-1]
Cfg.version     = "13"
Cfg.wdr         = os.path.expanduser(f"~/.{Cfg.name}")
Cfg.pidfile     = os.path.join(Cfg.wdr, f"{Cfg.name}.pid")
Cfg.mdir        = os.path.join(Cfg.wdr, "mods")


def daemon(verbose=False):
    "switch to background."
    # pylint: disable=W0212
    pid = os.fork()
    if pid != 0:
        os._exit(0)
    os.setsid()
    pid2 = os.fork()
    if pid2 != 0:
        os._exit(0)
    if not verbose:
        with open('/dev/null', 'r', encoding="utf-8") as sis:
            os.dup2(sis.fileno(), sys.stdin.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as sos:
            os.dup2(sos.fileno(), sys.stdout.fileno())
        with open('/dev/null', 'a+', encoding="utf-8") as ses:
            os.dup2(ses.fileno(), sys.stderr.fileno())
    os.umask(0)
    os.chdir("/")


def pidfile(path):
    "create pidfile"
    if os.path.exists(path):
        os.unlink(path)
    cdir(path)
    with open(path, "w", encoding="utf-8") as fds:
        fds.write(str(os.getpid()))


def privileges(username):
    "drop privileges."
    pwnam = pwd.getpwnam(username)
    os.setgid(pwnam.pw_gid)
    os.setuid(pwnam.pw_uid)


def main():
    "main"
    parse(Cfg, " ".join(sys.argv[1:]))
    if "v" in Cfg.opts:
        enable(print)
        setout(print)
    scan(modules, Cfg.mod, Cfg.sets.dis)
    cmnd(Cfg.otxt, print)
    print(Cfg.otxt)
    daemon("v" in Cfg.opts)
    pidfile(Cfg.pidfile)
    init(modules, Cfg.mod, Cfg.sets.dis)
    forever()


if __name__ == "__main__":
    main()
